<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	   xmlns:context="http://www.springframework.org/schema/context"
	   xmlns:mvc="http://www.springframework.org/schema/mvc"
	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	   xsi:schemaLocation="
        http://www.springframework.org/schema/beans 
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context 
        http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/mvc
        http://www.springframework.org/schema/mvc/spring-mvc.xsd">


	<!-- 扫描Controller -->
	<context:component-scan base-package="com.springmvc.app02"></context:component-scan>

	<!-- 配置注解的映射器 -->
	<!-- <bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping"></bean> -->
	<!-- 配置注解的适配器 -->
	<!-- <bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter"></bean> -->
	<!-- 两个一起配置，一行配置解决问题
    <mvc:annotation-driven></mvc:annotation-driven>实现在效果和
    上面的配置RequestMappingHandlerMapping  RequestMappingHandlerAdapter
    是一样的效果 但是功能比上面的配置方式更加强大  如可以把返回对象转成json字符串等等

     -->
	<mvc:annotation-driven></mvc:annotation-driven>

	<!-- 配置 视图解析器-->
	<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<!-- 配置前缀 -->
		 <property name="prefix" value="/WEB-INF/"></property>
		<!-- 配置后缀 -->
		 <property name="suffix" value=".jsp"></property>
	</bean>

	<!--对静态资源放行-->
	<mvc:resources mapping="/static/**/" location="/static/" />

	<!-- 配置springmvc对二进制流的支持 -->
	<bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<!-- 设置文件上传的临时目录 -->
		<property name="uploadTempDir" value="/WEB-INF/upload"></property>
		<!-- 文件上传的编码 -->
		<property name="defaultEncoding" value="UTF-8"></property>
		<!-- 设置文件上传的最大值  20M -->
		<property name="maxUploadSize" value="20971520"></property>
	</bean>

</beans>
