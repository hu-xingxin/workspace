[main]
#使用数据库进行验证和授权
databaseRealm=com.servlet.shiro.DatabaseRealm
securityManager.realms=$databaseRealm

#加密机制
credentialsMatcher=org.apache.shiro.authc.credential.HashedCredentialsMatcher
credentialsMatcher.hashAlgorithmName=md5
credentialsMatcher.hashIterations=2
credentialsMatcher.storedCredentialsHexEncoded=true
databaseRealm.credentialsMatcher=$credentialsMatcher

#当访问需要验证的页面，但是又没有验证的情况下，跳转到login.jsp
authc.loginUrl=/login
#当访问需要角色的页面，但是又不拥有这个角色的情况下，跳转到noroles
roles.unauthorizedUrl=/login
#当访问需要权限的页面，但是又不拥有这个权限的情况下，跳转到noperms
perms.unauthorizedUrl=/login

#users，roles和perms都通过前面知识点的数据库配置了
[users]

#urls用来指定哪些资源需要什么对应的授权才能使用
#没有写在这里的url 则不进行过滤拦截
[urls]
#doLogout地址就会进行退出行为
/doLogout=logout
#可以匿名访问的地址
/login*=anon
/static/**=anon

#需要登录后才可以查看
/upload=authc,perms["user:upload"]
/toOrder=authc
#删除商品不仅需要登录，而且要拥有 productManager 权限才可以操作
/deleteProduct=authc,roles[productManager]
#删除订单，不仅需要登录，而且要拥有 deleteOrder 权限才可以操作
/deleteOrder=authc,perms["deleteOrder"]

/**=authc